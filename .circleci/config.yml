# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:10
    working_directory: ~/gatsby-site
    environment:
      BRANCH: master
      TARGET_REPO: apeterson7/apeterson7.github.io.git
    steps:
      # Download and cache dependencies
      - checkout
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package-lock.json
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            # Fallback cache to be used
            - v1-npm-deps-
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Gatsby Build
          command: npm run build
      - deploy:
          name: Deploy static pages to Github Pages
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              echo -e "Starting to deploy to Github Pages\n"
              #using token clone gh-pages branch
              git config --global user.email "builds@circleci.com"
              git config --global user.name "CircleCI"
              git clone --quiet --branch=$CIRCLE_BRANCH https://${GH_TOKEN}@github.com/$TARGET_REPO 
              echo "checkout out code"
              ls -la apeterson7.github.io

              echo "creating archive"
              mv apeterson7.github.io/archive .
              temp=$(date "+%Y.%m.%d-%H.%M.%S")
              mkdir $temp
              mv -v ./apeterson7.github.io/* $temp
              mv $temp archive
              mv archive apeterson7.github.io
              
              ls -la public 
              mv -v ./public/* apeterson7.github.io
              ls -la apeterson7.github.io/
              cd apeterson7.github.io/
              git add .
              git commit -m "Circle CI Deployment ${temp}"
              git push
            else
              echo "Not master branch, dry run only"
            fi